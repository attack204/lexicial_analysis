文法：
P0 S->O 
P1 O->F 
P2 O->O F 
P3 F->T N X A 
P4 T->FLOAT 
P5 T->INT 
P6 T->STRING 
P7 T->BOOL 
P8 N->MAIN 
P9 N->ID 
P10 X->XKH_L XKH_R 
P11 X->XKH_L T ID XKH_R 
P12 A->DKH_L DKH_R 
P13 A->DKH_L L DKH_R 
P14 L->Y 
P15 L->L Y 
P16 Y->D 
P17 Y->Z 
P18 Y->I 
P19 Y->W 
P20 Y->R 
P21 D->T ID SEMICOLON 
P22 Z->B 
P23 Z->T B 
P24 B->ID ASSIGN E SEMICOLON 
P25 E->XKH_L E XKH_R 
P26 E->V 
P27 E->E G E 
P28 V->ID 
P29 V->C 
P30 C->FLOAT_VALUE 
P31 C->INT_VALUE 
P32 C->STRING_VALUE 
P33 C->BOOL_VALUE 
P34 G->ADD 
P35 G->SUBTRACT 
P36 G->MULTIPLY 
P37 G->DIVIDE 
P38 I->J 
P39 I->K 
P40 J->IF XKH_L P XKH_R A 
P41 K->J ELSE A 
P42 P->V Q V 
P43 Q->GREATER_EQUAL 
P44 Q->LESS_EQUAL 
P45 Q->GREATER 
P46 Q->LESS 
P47 Q->EQUAL 
P48 Q->NOTEQUAL 
P49 W->WHILE XKH_L P XKH_R A 
P50 R->RETURN V SEMICOLON 
--------------------------------------------------------------------------------
项目集族：
I0:
S_->·S 
S->·O 
O->·F 
O->·O F 
F->·T N X A 
T->·FLOAT 
T->·INT 
T->·STRING 
T->·BOOL 
I1:
S_->S ·
I2:
S->O ·
O->O ·F 
F->·T N X A 
T->·FLOAT 
T->·INT 
T->·STRING 
T->·BOOL 
I3:
O->F ·
I4:
F->T ·N X A 
N->·MAIN 
N->·ID 
I5:
T->FLOAT ·
I6:
T->INT ·
I7:
T->STRING ·
I8:
T->BOOL ·
I9:
O->O F ·
I10:
F->T N ·X A 
X->·XKH_L XKH_R 
X->·XKH_L T ID XKH_R 
I11:
N->MAIN ·
I12:
N->ID ·
I13:
F->T N X ·A 
A->·DKH_L DKH_R 
A->·DKH_L L DKH_R 
I14:
X->XKH_L ·XKH_R 
X->XKH_L ·T ID XKH_R 
T->·FLOAT 
T->·INT 
T->·STRING 
T->·BOOL 
I15:
F->T N X A ·
I16:
A->DKH_L ·DKH_R 
A->DKH_L ·L DKH_R 
L->·Y 
L->·L Y 
Y->·D 
Y->·Z 
Y->·I 
Y->·W 
Y->·R 
D->·T ID SEMICOLON 
Z->·B 
Z->·T B 
I->·J 
I->·K 
W->·WHILE XKH_L P XKH_R A 
R->·RETURN V SEMICOLON 
T->·FLOAT 
T->·INT 
T->·STRING 
T->·BOOL 
B->·ID ASSIGN E SEMICOLON 
J->·IF XKH_L P XKH_R A 
K->·J ELSE A 
I17:
X->XKH_L T ·ID XKH_R 
I18:
X->XKH_L XKH_R ·
I19:
D->T ·ID SEMICOLON 
Z->T ·B 
B->·ID ASSIGN E SEMICOLON 
I20:
B->ID ·ASSIGN E SEMICOLON 
I21:
A->DKH_L DKH_R ·
I22:
A->DKH_L L ·DKH_R 
L->L ·Y 
Y->·D 
Y->·Z 
Y->·I 
Y->·W 
Y->·R 
D->·T ID SEMICOLON 
Z->·B 
Z->·T B 
I->·J 
I->·K 
W->·WHILE XKH_L P XKH_R A 
R->·RETURN V SEMICOLON 
T->·FLOAT 
T->·INT 
T->·STRING 
T->·BOOL 
B->·ID ASSIGN E SEMICOLON 
J->·IF XKH_L P XKH_R A 
K->·J ELSE A 
I23:
L->Y ·
I24:
Y->D ·
I25:
Y->Z ·
I26:
Y->I ·
I27:
Y->W ·
I28:
Y->R ·
I29:
Z->B ·
I30:
I->J ·
K->J ·ELSE A 
I31:
I->K ·
I32:
J->IF ·XKH_L P XKH_R A 
I33:
W->WHILE ·XKH_L P XKH_R A 
I34:
R->RETURN ·V SEMICOLON 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I35:
X->XKH_L T ID ·XKH_R 
I36:
D->T ID ·SEMICOLON 
B->ID ·ASSIGN E SEMICOLON 
I37:
Z->T B ·
I38:
B->ID ASSIGN ·E SEMICOLON 
E->·XKH_L E XKH_R 
E->·V 
E->·E G E 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I39:
A->DKH_L L DKH_R ·
I40:
L->L Y ·
I41:
K->J ELSE ·A 
A->·DKH_L DKH_R 
A->·DKH_L L DKH_R 
I42:
J->IF XKH_L ·P XKH_R A 
P->·V Q V 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I43:
W->WHILE XKH_L ·P XKH_R A 
P->·V Q V 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I44:
V->ID ·
I45:
R->RETURN V ·SEMICOLON 
I46:
V->C ·
I47:
C->FLOAT_VALUE ·
I48:
C->INT_VALUE ·
I49:
C->STRING_VALUE ·
I50:
C->BOOL_VALUE ·
I51:
X->XKH_L T ID XKH_R ·
I52:
D->T ID SEMICOLON ·
I53:
E->XKH_L ·E XKH_R 
E->·XKH_L E XKH_R 
E->·V 
E->·E G E 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I54:
B->ID ASSIGN E ·SEMICOLON 
E->E ·G E 
G->·ADD 
G->·SUBTRACT 
G->·MULTIPLY 
G->·DIVIDE 
I55:
E->V ·
I56:
K->J ELSE A ·
I57:
P->V ·Q V 
Q->·GREATER_EQUAL 
Q->·LESS_EQUAL 
Q->·GREATER 
Q->·LESS 
Q->·EQUAL 
Q->·NOTEQUAL 
I58:
J->IF XKH_L P ·XKH_R A 
I59:
W->WHILE XKH_L P ·XKH_R A 
I60:
R->RETURN V SEMICOLON ·
I61:
E->XKH_L E ·XKH_R 
E->E ·G E 
G->·ADD 
G->·SUBTRACT 
G->·MULTIPLY 
G->·DIVIDE 
I62:
B->ID ASSIGN E SEMICOLON ·
I63:
E->E G ·E 
E->·XKH_L E XKH_R 
E->·V 
E->·E G E 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I64:
G->ADD ·
I65:
G->SUBTRACT ·
I66:
G->MULTIPLY ·
I67:
G->DIVIDE ·
I68:
P->V Q ·V 
V->·ID 
V->·C 
C->·FLOAT_VALUE 
C->·INT_VALUE 
C->·STRING_VALUE 
C->·BOOL_VALUE 
I69:
Q->GREATER_EQUAL ·
I70:
Q->LESS_EQUAL ·
I71:
Q->GREATER ·
I72:
Q->LESS ·
I73:
Q->EQUAL ·
I74:
Q->NOTEQUAL ·
I75:
J->IF XKH_L P XKH_R ·A 
A->·DKH_L DKH_R 
A->·DKH_L L DKH_R 
I76:
W->WHILE XKH_L P XKH_R ·A 
A->·DKH_L DKH_R 
A->·DKH_L L DKH_R 
I77:
E->XKH_L E XKH_R ·
I78:
E->E G E ·
E->E ·G E 
G->·ADD 
G->·SUBTRACT 
G->·MULTIPLY 
G->·DIVIDE 
I79:
P->V Q V ·
I80:
J->IF XKH_L P XKH_R A ·
I81:
W->WHILE XKH_L P XKH_R A ·
--------------------------------------------------------------------------------
FIRST集：
FLOAT:
FLOAT 
WHILE:
WHILE 
LESS_EQUAL:
LESS_EQUAL 
GREATER:
GREATER 
D:
FLOAT BOOL INT STRING 
DKH_R:
DKH_R 
EQUAL:
EQUAL 
INT_VALUE:
INT_VALUE 
P:
FLOAT_VALUE STRING_VALUE INT_VALUE ID BOOL_VALUE 
L:
FLOAT WHILE IF BOOL INT ID STRING RETURN 
SEMICOLON:
SEMICOLON 
T:
FLOAT BOOL INT STRING 
B:
ID 
Q:
NOTEQUAL EQUAL LESS_EQUAL LESS GREATER GREATER_EQUAL 
INT:
INT 
ID:
ID 
A:
DKH_L 
ELSE:
ELSE 
IF:
IF 
DKH_L:
DKH_L 
FLOAT_VALUE:
FLOAT_VALUE 
R:
RETURN 
J:
IF 
STRING:
STRING 
MAIN:
MAIN 
O:
FLOAT BOOL INT STRING 
V:
FLOAT_VALUE STRING_VALUE INT_VALUE ID BOOL_VALUE 
XKH_R:
XKH_R 
LESS:
LESS 
N:
ID MAIN 
ADD:
ADD 
GREATER_EQUAL:
GREATER_EQUAL 
STRING_VALUE:
STRING_VALUE 
SUBTRACT:
SUBTRACT 
BOOL:
BOOL 
ASSIGN:
ASSIGN 
X:
XKH_L 
K:
IF 
E:
FLOAT_VALUE STRING_VALUE INT_VALUE ID BOOL_VALUE XKH_L 
F:
FLOAT BOOL INT STRING 
BOOL_VALUE:
BOOL_VALUE 
C:
FLOAT_VALUE STRING_VALUE INT_VALUE BOOL_VALUE 
XKH_L:
XKH_L 
I:
IF 
DIVIDE:
DIVIDE 
Z:
FLOAT BOOL INT ID STRING 
S:
FLOAT BOOL INT STRING 
G:
SUBTRACT DIVIDE MULTIPLY ADD 
RETURN:
RETURN 
NOTEQUAL:
NOTEQUAL 
W:
WHILE 
MULTIPLY:
MULTIPLY 
Y:
FLOAT WHILE IF BOOL INT ID STRING RETURN 
--------------------------------------------------------------------------------
FOLLOW集：
O:
FLOAT END BOOL INT STRING 
T:
ID MAIN 
I:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
B:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
V:
SEMICOLON NOTEQUAL EQUAL SUBTRACT LESS_EQUAL DIVIDE XKH_R LESS MULTIPLY GREATER GREATER_EQUAL ADD 
Q:
FLOAT_VALUE STRING_VALUE INT_VALUE ID BOOL_VALUE 
Z:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
S:
END 
N:
XKH_L 
G:
FLOAT_VALUE STRING_VALUE INT_VALUE ID BOOL_VALUE XKH_L 
A:
FLOAT DKH_R WHILE IF END BOOL INT ID STRING RETURN ELSE 
D:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
R:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
W:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
J:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN ELSE 
X:
DKH_L 
K:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
E:
SEMICOLON SUBTRACT DIVIDE XKH_R MULTIPLY ADD 
P:
XKH_R 
F:
FLOAT END BOOL INT STRING 
L:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
Y:
DKH_R FLOAT WHILE IF BOOL INT ID STRING RETURN 
C:
SEMICOLON NOTEQUAL EQUAL SUBTRACT LESS_EQUAL DIVIDE XKH_R LESS MULTIPLY GREATER GREATER_EQUAL ADD 
--------------------------------------------------------------------------------
ACTION表：
s0 FLOAT s5|||BOOL s8|||INT s6|||STRING s7|||
s1 END acc-1|||
s2 FLOAT s5|||END r0|||BOOL s8|||INT s6|||STRING s7|||
s3 FLOAT r1|||END r1|||BOOL r1|||INT r1|||STRING r1|||
s4 ID s12|||MAIN s11|||
s5 ID r4|||MAIN r4|||
s6 ID r5|||MAIN r5|||
s7 ID r6|||MAIN r6|||
s8 ID r7|||MAIN r7|||
s9 FLOAT r2|||END r2|||BOOL r2|||INT r2|||STRING r2|||
s10 XKH_L s14|||
s11 XKH_L r8|||
s12 XKH_L r9|||
s13 DKH_L s16|||
s14 FLOAT s5|||BOOL s8|||INT s6|||XKH_R s18|||STRING s7|||
s15 FLOAT r3|||END r3|||BOOL r3|||INT r3|||STRING r3|||
s16 DKH_R s21|||FLOAT s5|||WHILE s33|||IF s32|||BOOL s8|||INT s6|||ID s20|||STRING s7|||RETURN s34|||
s17 ID s35|||
s18 DKH_L r10|||
s19 ID s36|||
s20 ASSIGN s38|||
s21 FLOAT r12|||DKH_R r12|||WHILE r12|||IF r12|||END r12|||BOOL r12|||INT r12|||ID r12|||STRING r12|||RETURN r12|||ELSE r12|||
s22 DKH_R s39|||FLOAT s5|||WHILE s33|||IF s32|||BOOL s8|||INT s6|||ID s20|||STRING s7|||RETURN s34|||
s23 DKH_R r14|||FLOAT r14|||WHILE r14|||IF r14|||BOOL r14|||INT r14|||ID r14|||STRING r14|||RETURN r14|||
s24 DKH_R r16|||FLOAT r16|||WHILE r16|||IF r16|||BOOL r16|||INT r16|||ID r16|||STRING r16|||RETURN r16|||
s25 DKH_R r17|||FLOAT r17|||WHILE r17|||IF r17|||BOOL r17|||INT r17|||ID r17|||STRING r17|||RETURN r17|||
s26 DKH_R r18|||FLOAT r18|||WHILE r18|||IF r18|||BOOL r18|||INT r18|||ID r18|||STRING r18|||RETURN r18|||
s27 DKH_R r19|||FLOAT r19|||WHILE r19|||IF r19|||BOOL r19|||INT r19|||ID r19|||STRING r19|||RETURN r19|||
s28 DKH_R r20|||FLOAT r20|||WHILE r20|||IF r20|||BOOL r20|||INT r20|||ID r20|||STRING r20|||RETURN r20|||
s29 DKH_R r22|||FLOAT r22|||WHILE r22|||IF r22|||BOOL r22|||INT r22|||ID r22|||STRING r22|||RETURN r22|||
s30 DKH_R r38|||FLOAT r38|||WHILE r38|||IF r38|||BOOL r38|||INT r38|||ID r38|||STRING r38|||RETURN r38|||ELSE s41|||
s31 DKH_R r39|||FLOAT r39|||WHILE r39|||IF r39|||BOOL r39|||INT r39|||ID r39|||STRING r39|||RETURN r39|||
s32 XKH_L s42|||
s33 XKH_L s43|||
s34 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||
s35 XKH_R s51|||
s36 SEMICOLON s52|||ASSIGN s38|||
s37 DKH_R r23|||FLOAT r23|||WHILE r23|||IF r23|||BOOL r23|||INT r23|||ID r23|||STRING r23|||RETURN r23|||
s38 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||XKH_L s53|||
s39 FLOAT r13|||DKH_R r13|||WHILE r13|||IF r13|||END r13|||BOOL r13|||INT r13|||ID r13|||STRING r13|||RETURN r13|||ELSE r13|||
s40 DKH_R r15|||FLOAT r15|||WHILE r15|||IF r15|||BOOL r15|||INT r15|||ID r15|||STRING r15|||RETURN r15|||
s41 DKH_L s16|||
s42 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||
s43 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||
s44 SEMICOLON r28|||NOTEQUAL r28|||EQUAL r28|||SUBTRACT r28|||LESS_EQUAL r28|||DIVIDE r28|||XKH_R r28|||LESS r28|||MULTIPLY r28|||GREATER r28|||GREATER_EQUAL r28|||ADD r28|||
s45 SEMICOLON s60|||
s46 SEMICOLON r29|||NOTEQUAL r29|||EQUAL r29|||SUBTRACT r29|||LESS_EQUAL r29|||DIVIDE r29|||XKH_R r29|||LESS r29|||MULTIPLY r29|||GREATER r29|||GREATER_EQUAL r29|||ADD r29|||
s47 SEMICOLON r30|||NOTEQUAL r30|||EQUAL r30|||SUBTRACT r30|||LESS_EQUAL r30|||DIVIDE r30|||XKH_R r30|||LESS r30|||MULTIPLY r30|||GREATER r30|||GREATER_EQUAL r30|||ADD r30|||
s48 SEMICOLON r31|||NOTEQUAL r31|||EQUAL r31|||SUBTRACT r31|||LESS_EQUAL r31|||DIVIDE r31|||XKH_R r31|||LESS r31|||MULTIPLY r31|||GREATER r31|||GREATER_EQUAL r31|||ADD r31|||
s49 SEMICOLON r32|||NOTEQUAL r32|||EQUAL r32|||SUBTRACT r32|||LESS_EQUAL r32|||DIVIDE r32|||XKH_R r32|||LESS r32|||MULTIPLY r32|||GREATER r32|||GREATER_EQUAL r32|||ADD r32|||
s50 SEMICOLON r33|||NOTEQUAL r33|||EQUAL r33|||SUBTRACT r33|||LESS_EQUAL r33|||DIVIDE r33|||XKH_R r33|||LESS r33|||MULTIPLY r33|||GREATER r33|||GREATER_EQUAL r33|||ADD r33|||
s51 DKH_L r11|||
s52 DKH_R r21|||FLOAT r21|||WHILE r21|||IF r21|||BOOL r21|||INT r21|||ID r21|||STRING r21|||RETURN r21|||
s53 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||XKH_L s53|||
s54 SEMICOLON s62|||SUBTRACT s65|||DIVIDE s67|||MULTIPLY s66|||ADD s64|||
s55 SEMICOLON r26|||SUBTRACT r26|||DIVIDE r26|||XKH_R r26|||MULTIPLY r26|||ADD r26|||
s56 DKH_R r41|||FLOAT r41|||WHILE r41|||IF r41|||BOOL r41|||INT r41|||ID r41|||STRING r41|||RETURN r41|||
s57 NOTEQUAL s74|||EQUAL s73|||LESS_EQUAL s70|||LESS s72|||GREATER s71|||GREATER_EQUAL s69|||
s58 XKH_R s75|||
s59 XKH_R s76|||
s60 DKH_R r50|||FLOAT r50|||WHILE r50|||IF r50|||BOOL r50|||INT r50|||ID r50|||STRING r50|||RETURN r50|||
s61 SUBTRACT s65|||DIVIDE s67|||XKH_R s77|||MULTIPLY s66|||ADD s64|||
s62 DKH_R r24|||FLOAT r24|||WHILE r24|||IF r24|||BOOL r24|||INT r24|||ID r24|||STRING r24|||RETURN r24|||
s63 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||XKH_L s53|||
s64 FLOAT_VALUE r34|||STRING_VALUE r34|||INT_VALUE r34|||ID r34|||BOOL_VALUE r34|||XKH_L r34|||
s65 FLOAT_VALUE r35|||STRING_VALUE r35|||INT_VALUE r35|||ID r35|||BOOL_VALUE r35|||XKH_L r35|||
s66 FLOAT_VALUE r36|||STRING_VALUE r36|||INT_VALUE r36|||ID r36|||BOOL_VALUE r36|||XKH_L r36|||
s67 FLOAT_VALUE r37|||STRING_VALUE r37|||INT_VALUE r37|||ID r37|||BOOL_VALUE r37|||XKH_L r37|||
s68 FLOAT_VALUE s47|||STRING_VALUE s49|||INT_VALUE s48|||ID s44|||BOOL_VALUE s50|||
s69 FLOAT_VALUE r43|||STRING_VALUE r43|||INT_VALUE r43|||ID r43|||BOOL_VALUE r43|||
s70 FLOAT_VALUE r44|||STRING_VALUE r44|||INT_VALUE r44|||ID r44|||BOOL_VALUE r44|||
s71 FLOAT_VALUE r45|||STRING_VALUE r45|||INT_VALUE r45|||ID r45|||BOOL_VALUE r45|||
s72 FLOAT_VALUE r46|||STRING_VALUE r46|||INT_VALUE r46|||ID r46|||BOOL_VALUE r46|||
s73 FLOAT_VALUE r47|||STRING_VALUE r47|||INT_VALUE r47|||ID r47|||BOOL_VALUE r47|||
s74 FLOAT_VALUE r48|||STRING_VALUE r48|||INT_VALUE r48|||ID r48|||BOOL_VALUE r48|||
s75 DKH_L s16|||
s76 DKH_L s16|||
s77 SEMICOLON r25|||SUBTRACT r25|||DIVIDE r25|||XKH_R r25|||MULTIPLY r25|||ADD r25|||
s78 SEMICOLON r27|||SUBTRACT s65|||DIVIDE s67|||XKH_R r27|||MULTIPLY s66|||ADD s64|||
s79 XKH_R r42|||
s80 DKH_R r40|||FLOAT r40|||WHILE r40|||IF r40|||BOOL r40|||INT r40|||ID r40|||STRING r40|||RETURN r40|||ELSE r40|||
s81 DKH_R r49|||FLOAT r49|||WHILE r49|||IF r49|||BOOL r49|||INT r49|||ID r49|||STRING r49|||RETURN r49|||
--------------------------------------------------------------------------------
GOTO表：
s0 O 2|||T 4|||S 1|||F 3|||
s1 
s2 T 4|||F 9|||
s3 
s4 N 10|||
s5 
s6 
s7 
s8 
s9 
s10 X 13|||
s11 
s12 
s13 A 15|||
s14 T 17|||
s15 
s16 T 19|||I 26|||B 29|||R 28|||W 27|||J 30|||Z 25|||K 31|||L 22|||Y 23|||D 24|||
s17 
s18 
s19 B 37|||
s20 
s21 
s22 T 19|||I 26|||B 29|||R 28|||W 27|||J 30|||Z 25|||K 31|||Y 40|||D 24|||
s23 
s24 
s25 
s26 
s27 
s28 
s29 
s30 
s31 
s32 
s33 
s34 V 45|||C 46|||
s35 
s36 
s37 
s38 V 55|||E 54|||C 46|||
s39 
s40 
s41 A 56|||
s42 V 57|||P 58|||C 46|||
s43 V 57|||P 59|||C 46|||
s44 
s45 
s46 
s47 
s48 
s49 
s50 
s51 
s52 
s53 V 55|||E 61|||C 46|||
s54 G 63|||
s55 
s56 
s57 Q 68|||
s58 
s59 
s60 
s61 G 63|||
s62 
s63 V 55|||E 78|||C 46|||
s64 
s65 
s66 
s67 
s68 V 79|||C 46|||
s69 
s70 
s71 
s72 
s73 
s74 
s75 A 80|||
s76 A 81|||
s77 
s78 G 63|||
s79 
s80 
s81 
--------------------------------------------------------------------------------
源程序：
int main() {  //compilation
    int a = 1;
    int b = 2;
    bool c = true;
    if (a >= b) {
        c = false;
    } else {
        c = true;
    }
    float d = 1;
    while (b < 10) {
        d = d + 1;
    }
    return 0;
}

--------------------------------------------------------------------------------
词法分析：
<INT> Word(type=6, my_type=INT, prodRight=[], value="int")
<MAIN> Word(type=14, my_type=MAIN, prodRight=[], value="main")
<XKH_L> Word(type=17, my_type=XKH_L, prodRight=[], value="(")
<XKH_R> Word(type=18, my_type=XKH_R, prodRight=[], value=")")
<DKH_L> Word(type=21, my_type=DKH_L, prodRight=[], value="{")
<INT> Word(type=6, my_type=INT, prodRight=[], value="int")
<ID> Word(type=0, my_type=ID, prodRight=[], value="a")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<INT_VALUE> Word(type=2, my_type=INT_VALUE, prodRight=[], value="1")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<INT> Word(type=6, my_type=INT, prodRight=[], value="int")
<ID> Word(type=0, my_type=ID, prodRight=[], value="b")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<INT_VALUE> Word(type=2, my_type=INT_VALUE, prodRight=[], value="2")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<BOOL> Word(type=8, my_type=BOOL, prodRight=[], value="bool")
<ID> Word(type=0, my_type=ID, prodRight=[], value="c")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<BOOL_VALUE> Word(type=4, my_type=BOOL_VALUE, prodRight=[], value="true")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<IF> Word(type=9, my_type=IF, prodRight=[], value="if")
<XKH_L> Word(type=17, my_type=XKH_L, prodRight=[], value="(")
<ID> Word(type=0, my_type=ID, prodRight=[], value="a")
<GREATER_EQUAL> Word(type=30, my_type=GREATER_EQUAL, prodRight=[], value=">=")
<ID> Word(type=0, my_type=ID, prodRight=[], value="b")
<XKH_R> Word(type=18, my_type=XKH_R, prodRight=[], value=")")
<DKH_L> Word(type=21, my_type=DKH_L, prodRight=[], value="{")
<ID> Word(type=0, my_type=ID, prodRight=[], value="c")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<BOOL_VALUE> Word(type=4, my_type=BOOL_VALUE, prodRight=[], value="false")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<DKH_R> Word(type=22, my_type=DKH_R, prodRight=[], value="}")
<ELSE> Word(type=10, my_type=ELSE, prodRight=[], value="else")
<DKH_L> Word(type=21, my_type=DKH_L, prodRight=[], value="{")
<ID> Word(type=0, my_type=ID, prodRight=[], value="c")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<BOOL_VALUE> Word(type=4, my_type=BOOL_VALUE, prodRight=[], value="true")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<DKH_R> Word(type=22, my_type=DKH_R, prodRight=[], value="}")
<FLOAT> Word(type=5, my_type=FLOAT, prodRight=[], value="float")
<ID> Word(type=0, my_type=ID, prodRight=[], value="d")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<INT_VALUE> Word(type=2, my_type=INT_VALUE, prodRight=[], value="1")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<WHILE> Word(type=11, my_type=WHILE, prodRight=[], value="while")
<XKH_L> Word(type=17, my_type=XKH_L, prodRight=[], value="(")
<ID> Word(type=0, my_type=ID, prodRight=[], value="b")
<LESS> Word(type=33, my_type=LESS, prodRight=[], value="<")
<INT_VALUE> Word(type=2, my_type=INT_VALUE, prodRight=[], value="10")
<XKH_R> Word(type=18, my_type=XKH_R, prodRight=[], value=")")
<DKH_L> Word(type=21, my_type=DKH_L, prodRight=[], value="{")
<ID> Word(type=0, my_type=ID, prodRight=[], value="d")
<ASSIGN> Word(type=29, my_type=ASSIGN, prodRight=[], value="=")
<ID> Word(type=0, my_type=ID, prodRight=[], value="d")
<ADD> Word(type=24, my_type=ADD, prodRight=[], value="+")
<INT_VALUE> Word(type=2, my_type=INT_VALUE, prodRight=[], value="1")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<DKH_R> Word(type=22, my_type=DKH_R, prodRight=[], value="}")
<RETURN> Word(type=15, my_type=RETURN, prodRight=[], value="return")
<INT_VALUE> Word(type=2, my_type=INT_VALUE, prodRight=[], value="0")
<SEMICOLON> Word(type=23, my_type=SEMICOLON, prodRight=[], value=";")
<DKH_R> Word(type=22, my_type=DKH_R, prodRight=[], value="}")
<END> Word(type=36, my_type=END, prodRight=[], value=null)
--------------------------------------------------------------------------------
SLR(1)语法分析：
INT 
T->INT 
T 
T MAIN 
N->MAIN 
T N 
T N XKH_L 
T N XKH_L XKH_R 
X->XKH_L XKH_R 
T N X 
T N X DKH_L 
T N X DKH_L INT 
T->INT 
T N X DKH_L T 
T N X DKH_L T ID 
T N X DKH_L T ID ASSIGN 
T N X DKH_L T ID ASSIGN INT_VALUE 
C->INT_VALUE 
T N X DKH_L T ID ASSIGN C 
V->C 
T N X DKH_L T ID ASSIGN V 
E->V 
T N X DKH_L T ID ASSIGN E 
T N X DKH_L T ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L T B 
Z->T B 
T N X DKH_L Z 
Y->Z 
T N X DKH_L Y 
L->Y 
T N X DKH_L L 
T N X DKH_L L INT 
T->INT 
T N X DKH_L L T 
T N X DKH_L L T ID 
T N X DKH_L L T ID ASSIGN 
T N X DKH_L L T ID ASSIGN INT_VALUE 
C->INT_VALUE 
T N X DKH_L L T ID ASSIGN C 
V->C 
T N X DKH_L L T ID ASSIGN V 
E->V 
T N X DKH_L L T ID ASSIGN E 
T N X DKH_L L T ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L L T B 
Z->T B 
T N X DKH_L L Z 
Y->Z 
T N X DKH_L L Y 
L->L Y 
T N X DKH_L L 
T N X DKH_L L BOOL 
T->BOOL 
T N X DKH_L L T 
T N X DKH_L L T ID 
T N X DKH_L L T ID ASSIGN 
T N X DKH_L L T ID ASSIGN BOOL_VALUE 
C->BOOL_VALUE 
T N X DKH_L L T ID ASSIGN C 
V->C 
T N X DKH_L L T ID ASSIGN V 
E->V 
T N X DKH_L L T ID ASSIGN E 
T N X DKH_L L T ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L L T B 
Z->T B 
T N X DKH_L L Z 
Y->Z 
T N X DKH_L L Y 
L->L Y 
T N X DKH_L L 
T N X DKH_L L IF 
T N X DKH_L L IF XKH_L 
T N X DKH_L L IF XKH_L ID 
V->ID 
T N X DKH_L L IF XKH_L V 
T N X DKH_L L IF XKH_L V GREATER_EQUAL 
Q->GREATER_EQUAL 
T N X DKH_L L IF XKH_L V Q 
T N X DKH_L L IF XKH_L V Q ID 
V->ID 
T N X DKH_L L IF XKH_L V Q V 
P->V Q V 
T N X DKH_L L IF XKH_L P 
T N X DKH_L L IF XKH_L P XKH_R 
T N X DKH_L L IF XKH_L P XKH_R DKH_L 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID ASSIGN 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID ASSIGN BOOL_VALUE 
C->BOOL_VALUE 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID ASSIGN C 
V->C 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID ASSIGN V 
E->V 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID ASSIGN E 
T N X DKH_L L IF XKH_L P XKH_R DKH_L ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L L IF XKH_L P XKH_R DKH_L B 
Z->B 
T N X DKH_L L IF XKH_L P XKH_R DKH_L Z 
Y->Z 
T N X DKH_L L IF XKH_L P XKH_R DKH_L Y 
L->Y 
T N X DKH_L L IF XKH_L P XKH_R DKH_L L 
T N X DKH_L L IF XKH_L P XKH_R DKH_L L DKH_R 
A->DKH_L L DKH_R 
T N X DKH_L L IF XKH_L P XKH_R A 
J->IF XKH_L P XKH_R A 
T N X DKH_L L J 
T N X DKH_L L J ELSE 
T N X DKH_L L J ELSE DKH_L 
T N X DKH_L L J ELSE DKH_L ID 
T N X DKH_L L J ELSE DKH_L ID ASSIGN 
T N X DKH_L L J ELSE DKH_L ID ASSIGN BOOL_VALUE 
C->BOOL_VALUE 
T N X DKH_L L J ELSE DKH_L ID ASSIGN C 
V->C 
T N X DKH_L L J ELSE DKH_L ID ASSIGN V 
E->V 
T N X DKH_L L J ELSE DKH_L ID ASSIGN E 
T N X DKH_L L J ELSE DKH_L ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L L J ELSE DKH_L B 
Z->B 
T N X DKH_L L J ELSE DKH_L Z 
Y->Z 
T N X DKH_L L J ELSE DKH_L Y 
L->Y 
T N X DKH_L L J ELSE DKH_L L 
T N X DKH_L L J ELSE DKH_L L DKH_R 
A->DKH_L L DKH_R 
T N X DKH_L L J ELSE A 
K->J ELSE A 
T N X DKH_L L K 
I->K 
T N X DKH_L L I 
Y->I 
T N X DKH_L L Y 
L->L Y 
T N X DKH_L L 
T N X DKH_L L FLOAT 
T->FLOAT 
T N X DKH_L L T 
T N X DKH_L L T ID 
T N X DKH_L L T ID ASSIGN 
T N X DKH_L L T ID ASSIGN INT_VALUE 
C->INT_VALUE 
T N X DKH_L L T ID ASSIGN C 
V->C 
T N X DKH_L L T ID ASSIGN V 
E->V 
T N X DKH_L L T ID ASSIGN E 
T N X DKH_L L T ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L L T B 
Z->T B 
T N X DKH_L L Z 
Y->Z 
T N X DKH_L L Y 
L->L Y 
T N X DKH_L L 
T N X DKH_L L WHILE 
T N X DKH_L L WHILE XKH_L 
T N X DKH_L L WHILE XKH_L ID 
V->ID 
T N X DKH_L L WHILE XKH_L V 
T N X DKH_L L WHILE XKH_L V LESS 
Q->LESS 
T N X DKH_L L WHILE XKH_L V Q 
T N X DKH_L L WHILE XKH_L V Q INT_VALUE 
C->INT_VALUE 
T N X DKH_L L WHILE XKH_L V Q C 
V->C 
T N X DKH_L L WHILE XKH_L V Q V 
P->V Q V 
T N X DKH_L L WHILE XKH_L P 
T N X DKH_L L WHILE XKH_L P XKH_R 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN ID 
V->ID 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN V 
E->V 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E ADD 
G->ADD 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E G 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E G INT_VALUE 
C->INT_VALUE 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E G C 
V->C 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E G V 
E->V 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E G E 
E->E G E 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L ID ASSIGN E SEMICOLON 
B->ID ASSIGN E SEMICOLON 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L B 
Z->B 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L Z 
Y->Z 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L Y 
L->Y 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L L 
T N X DKH_L L WHILE XKH_L P XKH_R DKH_L L DKH_R 
A->DKH_L L DKH_R 
T N X DKH_L L WHILE XKH_L P XKH_R A 
W->WHILE XKH_L P XKH_R A 
T N X DKH_L L W 
Y->W 
T N X DKH_L L Y 
L->L Y 
T N X DKH_L L 
T N X DKH_L L RETURN 
T N X DKH_L L RETURN INT_VALUE 
C->INT_VALUE 
T N X DKH_L L RETURN C 
V->C 
T N X DKH_L L RETURN V 
T N X DKH_L L RETURN V SEMICOLON 
R->RETURN V SEMICOLON 
T N X DKH_L L R 
Y->R 
T N X DKH_L L Y 
L->L Y 
T N X DKH_L L 
T N X DKH_L L DKH_R 
A->DKH_L L DKH_R 
T N X A 
F->T N X A 
F 
O->F 
O 
S->O 
S 
语法正确
--------------------------------------------------------------------------------
